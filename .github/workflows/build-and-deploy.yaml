name: Circle build and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  create-image-and-push-to-dockerhub:

    timeout-minutes: 30
    name: Create Image and Push to Dockerhub
    runs-on: ubuntu-latest

    # For each service, we define:
    # - service: actual image name
    # - build: the folder in the repo containing the Dockerfile
    strategy:
      matrix:
        include:
          - service: circle-api-gateway
            build: apiGateway
          - service: circle-auth-service
            build: auth
          - service: circle-chat-service
            build: chatService
          - service: circle-feed-service
            build: feedService
          - service: circle-notification-service
            build: notificationService
          - service: circle-payment-service
            build: paymentService
          - service: circle-post-service
            build: postService
          - service: circle-user-service
            build: userService

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push ${{ matrix.service}} Image
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.build }}
          file:  ./${{ matrix.build }}/Dockerfile
          push: true
          tags: arun0kb/${{ matrix.service }}:1.0.0
          # tags: arun0kb/${{ matrix.service }}:${{ github.sha }}
          no-cache: true

  setup-and-deploy:
    needs: [create-image-and-push-to-dockerhub]

    name: Setup and Deploy
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    # service : metadata name in deployment file
    # deployFolder : service folder name in k8s folder
    # deployFile : deployment file name
    # serviceFile : service file name
    # configMapFile : config map file name
    # secretFile : secret file name

    strategy:
      matrix:
        include:
          - service: api-gateway-deploy
            deployFolder: apiGateway
            deployFile: api-gateway-deploy.yml
            configMapFile: api-gateway-configmap.yml
            secretFile: api-gateway-secret.yml
            serviceFile: api-gateway-svc.yml
          - service: auth-deploy
            deployFolder: auth
            deployFile: auth-deploy.yml
            configMapFile: auth-configmap.yml
            secretFile: auth-secret.yml
            serviceFile: auth-svc.yml
            backendConfigFile: ""
          - service: chat-deploy
            deployFolder: chat
            deployFile: chat-deploy.yml
            configMapFile: chat-configmap.yml
            secretFile: chat-secret.yml
            serviceFile:  chat-svc.yml
            backendConfigFile: ""
          - service: feed-deploy
            deployFolder: feed
            deployFile: feed-deploy.yml
            configMapFile:  feed-configmap.yml
            secretFile: feed-secret.yml
            serviceFile: feed-svc.yml
            backendConfigFile: ""
          - service: notification-deploy
            deployFolder: notification
            deployFile: notification-deploy.yml
            configMapFile: notification-configmap.yml
            secretFile: notification-secret.yml
            serviceFile: notification-svc.yml
            backendConfigFile: notification-backendconfig.yml
          - service: payment-deploy
            deployFolder: payment
            deployFile: payment-deploy.yml
            configMapFile: payment-configmap.yml
            secretFile: payment-secret.yml
            serviceFile:  payment-svc.yml
            backendConfigFile: ""
          - service: post-deploy
            deployFolder: post
            deployFile: post-deploy.yml
            configMapFile: post-configmap.yml 
            secretFile: post-secret.yml
            serviceFile: post-svc.yml
            backendConfigFile: ""
          - service: user-deploy
            deployFolder: user
            deployFile: user-deploy.yml
            configMapFile: user-configmap.yml
            secretFile: user-secret.yml
            serviceFile:  user-svc.yml
            backendConfigFile: ""
          - service: rabbitmq-deploy
            deployFolder: rabbitmq
            deployFile: rabbitmq-deploy.yml
            configMapFile: ""
            secretFile: rabbitmq-secret.yml
            serviceFile:  rabbitmq-svc.yml
            backendConfigFile: ""
          - service: cache-deploy
            deployFolder: postCache
            deployFile: cache-deploy.yml
            configMapFile:  "" 
            secretFile: ""
            serviceFile:  cache-svc.yml
            backendConfigFile: ""

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GKE_SA }}

    - name: Get GKE Credentials
      uses: google-github-actions/get-gke-credentials@v1
      with:
        cluster_name: ${{ secrets.GKE_CLUSTER_NAME }}
        location: ${{ secrets.GKE_CLUSTER_ZONE }}

    - name: Update Deployment YAML for ${{ matrix.service}}
      run: |
        # Update the deploy.yml file in the appropriate k8s subfolder
        sed -i "s/DOCKER_IMG_TAG/1.0.0/g" ./k8s/${{ matrix.deployFolder }}/${{ matrix.deployFile }}
        cat ./k8s/${{ matrix.deployFolder }}/${{ matrix.deployFile }}
      # run: |
      #   sed -i "s/DOCKER_IMG_TAG/${{ github.sha }}/g" ./kubernetes/book-mgmt-api-deploy.yaml
      #   cat ./kubernetes/book-mgmt-api-deploy.yaml

    - name: Deploy ConfigMap if exists for ${{ matrix.service }}
      if: ${{ matrix.configMapFile != '' }}
      run: |
        kubectl apply -f ./k8s/${{ matrix.deployFolder }}/${{ matrix.configMapFile }} -n circle

    - name: Deploy Secret if exists for ${{ matrix.service }}
      if: ${{ matrix.secretFile != '' }}
      run: |
        kubectl apply -f ./k8s/${{ matrix.deployFolder }}/${{ matrix.secretFile }} -n circle

    - name: Deploy Backendconfig if exists for ${{ matrix.backendConfigFile }}
      if: ${{ matrix.backendConfigFile != '' }}
      run: |
        kubectl apply -f ./k8s/${{ matrix.deployFolder }}/${{ matrix.backendConfigFile }} -n circle

    - name: Deploy Service if exists for ${{ matrix.service }}
      if: ${{ matrix.serviceFile != '' }}
      run: |
        kubectl apply -f ./k8s/${{ matrix.deployFolder }}/${{ matrix.serviceFile }} -n circle

    # media-soup-svc  
    - name: Deploy load balancer Service media-soup-svc 
      run: |
        kubectl apply -f ./k8s/apiGateway/media-soup-svc.yml -n circle

    - name: Deploy on GKE for ${{ matrix.service}}
      run: |
        # Apply the updated deployment YAML file
        kubectl apply -f ./k8s/${{ matrix.deployFolder }}/${{ matrix.deployFile }}
        kubectl rollout restart deployment/${{ matrix.service }} -n circle
        # Wait for the deployment to roll out completely
        # kubectl rollout status deployment/${{ matrix.service }} -n circle