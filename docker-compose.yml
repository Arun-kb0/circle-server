services:
  api-gateway:
    build: ./apiGateway
    container_name: api-gateway
    ports:
      - 5001:5001
      - 9000:9000
    volumes:
      - ./apiGateway:/app
      - ./apiGateway/node_modules:/app/node_modules
    depends_on:
      - auth-service
      - user-service
      - post-cache
      - rabbitmq
      - feed-service
      - chat-service
      # - post-service
    environment:
      - LOGGER_DB=${GT_LOGGER_DB}
      - AUTH_SERVICE_HOST=${GT_AUTH_SERVICE_HOST}
      - AUTH_SERVICE_PORT=${AUTH_SERVICE_PORT}
      - USER_SERVICE_HOST=${GT_USER_SERVICE_HOST}
      - USER_SERVICE_PORT=${USER_SERVICE_PORT}
      # - POST_SERVICE_HOST=${GT_POST_SERVICE_HOST}
      # - POST_SERVICE_PORT=${POST_SERVICE_PORT}
      - FEED_SERVICE_HOST=${GT_FEED_SERVICE_HOST}
      - FEED_SERVICE_PORT=${FEED_SERVICE_PORT}
      - CHAT_SERVICE_HOST=host.docker.internal
      - CHAT_SERVICE_PORT=50055
      - NOTIFICATION_SERVICE_HOST=host.docker.internal
      - NOTIFICATION_SERVICE_PORT=50056
      - POST_CACHE_HOST=${GT_POST_CACHE_HOST}
      - POST_CACHE_PORT=${GT_POST_CACHE_PORT}
      - POST_RABBITMQ_USER=${RABBITMQ_USER}
      - POST_RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - GT_QUEUE_HOST=${GT_QUEUE_HOST}
      - GT_QUEUE_PORT=${GT_QUEUE_PORT}

  auth-service:
    build: ./auth
    container_name: auth-service
    ports:
      - 50051:50051
      - 8081:8081
    volumes:
      - ./auth:/app
      - node_modules:/app/node_modules
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/health" ]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s
    environment:
      - AUTH_SERVICE_PORT=${AUTH_SERVICE_PORT}
      - AUTH_SERVICE_HOST=${AUTH_SERVICE_HOST}
      - HEALTH_CHECK_PORT=${AUTH_HEALTH_CHECK_PORT}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - USER_DB_URI=${USER_DB_URI}
      - LOGGER_DB=${AUTH_LOGGER_DB}

  user-service:
    build: ./userService
    container_name: user-service
    ports:
      - 50052:50052
      - 8082:8082
    volumes:
      - ./userService:/app
      - ./userService/node_modules:/app/node_modules
    depends_on:
      - rabbitmq
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8082/health" ]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s
    environment:
      - USER_SERVICE_PORT=${USER_SERVICE_PORT}
      - USER_SERVICE_HOST=${USER_SERVICE_HOST}
      - HEALTH_CHECK_PORT=${USER_HEALTH_CHECK_PORT}
      - USER_DB_URI=${USER_DB_URI}
      - LOGGER_DB=${USER_LOGGER_DB}
      - POST_RABBITMQ_USER=${RABBITMQ_USER}
      - POST_RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - GT_QUEUE_HOST=${GT_QUEUE_HOST}
      - GT_QUEUE_PORT=${GT_QUEUE_PORT}

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # RabbitMQ broker port
      - "15672:15672" # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}

  post-cache:
    image: redis:7.4-alpine
    container_name: post-cache
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    restart: always

  feed-service:
    build: ./feedService
    container_name: feed-service
    ports:
      - 50054:50054
      - 8084:8084
    volumes:
      - ./feedService:/app
      - ./feedService/node_modules:/app/node_modules
    depends_on:
      - post-cache
      - user-service
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8084/health" ]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s
    environment:
      - FEED_SERVICE_HOST=${FEED_SERVICE_HOST}
      - FEED_SERVICE_PORT=${FEED_SERVICE_PORT}
      - FEED_HEALTH_CHECK_PORT=${FEED_HEALTH_CHECK_PORT}
      - POST_DB_URI=${POST_DB_URI}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - POST_CACHE_HOST=${POST_CACHE_HOST}
      - POST_CACHE_PORT=${POST_CACHE_PORT}
      - USER_SERVICE_HOST=${USER_SERVICE_HOST}
      - USER_SERVICE_PORT=${USER_SERVICE_PORT}

  chat-service:
    build: './chatService'
    container_name: chat-service
    ports:
      - 50055:50055
      - 8085:8085
    volumes: 
      - ./chatService:/app
      - ./chatService/node_modules:/app/node_modules
    depends_on:
      - user-service
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8085/health" ]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s
    environment:
      - CHAT_SERVICE_HOST=${CHAT_SERVICE_HOST}
      - CHAT_SERVICE_PORT=${CHAT_SERVICE_PORT}
      - CHAT_DB_URI=${CHAT_DB_URI}
      - CHAT_HEALTH_CHECK_PORT=${CHAT_HEALTH_CHECK_PORT}
      - USER_SERVICE_HOST=${GT_USER_SERVICE_HOST}
      - USER_SERVICE_PORT=${USER_SERVICE_PORT}
      - GT_QUEUE_HOST=${GT_QUEUE_HOST}
      - GT_QUEUE_PORT=${GT_QUEUE_PORT}
    
  # post-service:
  #   build: ./postService
  #   container_name: post-service
  #   ports: 
  #     - 50053:50053
  #     - 8083:8083
  #   volumes:
  #     - ./postService:/app
  #     - ./postService/node_modules:/app/node_modules
  #   healthcheck:
  #     test: ["CMD", "curl" , "-f", "http://localhost:8083/health"]
  #     interval: 30s
  #     timeout: 30s
  #     retries: 5
  #     start_period: 30s
  #   environment:
  #     - POST_SERVICE_PORT=${POST_SERVICE_PORT}
  #     - POST_SERVICE_HOST=${POST_SERVICE_HOST}
  #     - POST_HEALTH_CHECK_PORT=${POST_HEALTH_CHECK_PORT}
  #     - POST_DB_URI=${POST_DB_URI}

volumes:
  node_modules:
  redis-data:
